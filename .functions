### functions

# auto ls after cd
# handled by the prompt now as if you type in a dir without 'cd' then it won't ls
# cd() {
#     if [ "$#" -eq 0 ]; then
#         builtin cd && ls
#     else
#         builtin cd "$1" && ls
#     fi
# }

# make dir and cd into it automatically
mkdir() { command mkdir -p "$@" && builtin cd "$1"; }

# add colours to man
man() {
    env \
        LESS_TERMCAP_mb="$(printf '\e[1;32m')" \
        LESS_TERMCAP_md="$(printf '\e[1;32m')" \
        LESS_TERMCAP_me="$(printf '\e[0m')" \
        LESS_TERMCAP_se="$(printf '\e[0m')" \
        LESS_TERMCAP_so="$(printf '\e[1;33m')" \
        LESS_TERMCAP_ue="$(printf '\e[0m')" \
        LESS_TERMCAP_us="$(printf '\e[1;4;31m')" \
        man "$@"
}

# shows last 25 commands or shows last 10 commands including search words
hist() {
    if [ "$#" -eq 0 ]; then
        history 25
    else 
        history 10000 | grep "$*" | grep -v "hist" | tail -n 10
    fi
}

### other functions

# shows baseic terminal colours in a table
# from https://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
colour_table() {
    T='gYw'
    echo -e "\n                 40m     41m     42m     43m\
    44m     45m     46m     47m";

    for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' \
               '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' \
               '  36m' '1;36m' '  37m' '1;37m';
      do FG=${FGs// /}
      echo -en " $FGs \033[$FG  $T  "
      for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
        do echo -en "$EINS \033[$FG\033[$BG  $T  \033[0m";
      done
      echo;
    done
    echo
}

# lists all xterm 256 colours
# from https://wiki.archlinux.org/index.php/Color_output_in_console#bash
colour_list() {
    (x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)
}

# count the number of files and directories
dirstat() { 
    local files="$(\ls -p | grep -v / | wc -l)"
    local dirs="$(\ls -d */ 2> /dev/null | wc -l)"
    _trim "${files} files, ${dirs} directories"
}

# exec into a docker container
dk-exec() { docker exec -it "$1" sh; }

# extract archives
extract() {
    if [ -f "$1" ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "Could not extract $1" ;;
         esac
     else
         echo "$1 is not a valid file"
     fi
}

# find files
ffile() { find . -not -path '*/\.*' -iname "*${*}*" 2>&1 | grep -v 'Permission denied'; }

# find text
ftext () { grep -iIHrn --exclude-dir='.*' "$@"; }

# open github repo in browser
git-hub() {
    _is_git_repo || { echo "Not a git repo" && return 1; }
    local base_url="$(git remote get-url origin)"
    base_url="${base_url%\.git}/tree/$(git rev-parse --abbrev-ref HEAD)"
    base_url="${base_url//git@github\.com:/https:\/\/github\.com\/}"
    base_url="${base_url//git:\/\/github\.com/https:\/\/github\.com\/}"
    open "${base_url}/$1"
}

# enerate a qrcode
qrcode() { curl "http://qrenco.de/$1"; }

# list files and folders in a tree format with a default level of 2
tree() {
    if [ "$#" -eq 0 ]; then
        command tree --dirsfirst -C -L 2
    else
        command tree --dirsfirst -C "$@"
    fi
}

# test if true colour is supported by the terminal
true_colour_wave() {
    awk 'BEGIN{
        s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
        for (colnum = 0; colnum<77; colnum++) {
            r = 255-(colnum*255/76);
            g = (colnum*510/76);
            b = (colnum*255/76);
            if (g>255) g = 510-g;
            printf "\033[48;2;%d;%d;%dm", r,g,b;
            printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
            printf "%s\033[0m", substr(s,colnum+1,1);
        }
        printf "\n";
    }'
}

# shows the current weather
wttr() {
    if [ "$#" -lt 1 ]; then
        curl "http://wttr.in/$1"
    else
        curl "http://wttr.in/London"
    fi
}
