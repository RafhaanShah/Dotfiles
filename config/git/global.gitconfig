### global git config
# https://git-scm.com/docs/git-config
# to be included in main .gitconfig
# [include]
        # path = ~/Dotfiles/config/git/global.gitconfig

[core]
        # editor used, GIT_EDITOR overrides this
        editor = nano
        # pager used, GIT_PAGER overrides this
        pager = less
        # speed up commands involving untracked files
        untrackedCache = true
        # global gitignore file
        excludesfile = ~/Dotfiles/config/git/global.gitignore
        symlinks = false

[pull]
        # rebase local branches on top of the fetched branch, instead of merging
        rebase = true

[fetch]
        # remove any remote-tracking references that no longer exist on the remote
        prune = true

[help]
        # correct and execute mistyped commands after 5 seconds
        autocorrect = 50

[apply]
        # detect and fix whitespace errors
        whitespace = fix

[branch]
        # show most recently changed branches first
        sort = -committerdate

[alias]
        al = aliases
        ad = add
        amd = amend
        br = branch
        cl = clone
        cm = commit --message
        co = checkout
        disc = discard
        last = log -p -1
        lg = logg
        ll = log
        pl = pull
        ps = push
        st = status
        sq = squash
        unst = unstage
        upd = update

        aliases = "!al() { git config --get-regexp alias | grep \"${*:-alias}\"; }; al"
        amend = commit --amend
        cleanup = "!cln() { git branch -vv | grep ': gone]'|  grep -v \"*\" | awk '{ print $1; }' | xargs git branch -D; }; cln"
        discard = reset --hard
        duet = "!duet() { git commit --message $1 --author $2 <$3> --signoff; }; duet"
        logg = log -n 20 --graph --pretty=format:'%Cred%h%Creset %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
        nuke = "!nuke() { git reset --hard origin/$(git rev-parse --abbrev-ref HEAD); }; nuke"
        squash = "!squash() { git rebase -i HEAD~\"${1:-2}\" && git commit --amend --date=\"now\" --no-edit; }; squash"
        undo = reset --soft HEAD~1
        unstage = reset
        update = "!upd() { git add . && git amend --no-edit; }; upd"
